<%= render 'spree/checkout/payment/v3/form_elements', payment_method: payment_method %>

<script>
  function setUpPaymentRequest(config) {
    if (typeof config != 'undefined') {
      var paymentRequest = stripe.paymentRequest({
        country: config.country,
        currency: config.currency,
        total: {
          label: config.label,
          amount: config.amount
        },
        requestPayerName: true,
        requestPayerEmail: true
      });

      var prButton = elements.create('paymentRequestButton', {
        paymentRequest: paymentRequest
      });

      paymentRequest.canMakePayment().then(function(result) {
        if (result) {
          prButton.mount('#payment-request-button');
        } else {
          document.getElementById('payment-request-button').style.display = 'none';
        }
      });

      return paymentRequest;
    }
  };

  // Using a stripe.paymentRequest is required for Apple Pay, see
  // https://stripe.com/docs/js/payment_request/can_make_payment
  var paymentRequest = setUpPaymentRequest(Spree.stripePaymentMethod.config.payment_request);

  $(function() {
    var paymentMethodId = Spree.stripePaymentMethod.config.id;
    var form = Spree.stripePaymentMethod.element.parents('form');
    var submitButton = form.find('input[type="submit"]');
    var errorElement = form.find('#card-errors');
    var cardType = form.find('input#cc_type');
    var authToken = $('meta[name="csrf-token"]').attr('content');
    var errorElement = $('#card-errors');

    if (typeof paymentRequest != 'undefined') {
      paymentRequest.on('paymentmethod', function(result) {
        errorElement.text('').hide();
        handlePayment(result);
      });
    }

    form.bind('submit', function(event) {
      if (Spree.stripePaymentMethod.element.is(':visible')) {
        event.preventDefault();

        errorElement.text('').hide();

        stripe.createPaymentMethod(
          'card',
          cardNumber
        ).then(function(result) {
          handlePayment(result);
        });
      }
    });

    function handlePayment(payment) {
      if (payment.error) {
        showError(payment.error.message);
      } else {
        stripeTokenHandler(payment.paymentMethod);
        fetch('/stripe/confirm_payment', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            spree_payment_method_id: paymentMethodId,
            stripe_payment_method_id: payment.paymentMethod.id,
            authenticity_token: authToken
          })
        }).then(function(response) {
          response.json().then(function(json) {
            handleServerResponse(json, payment);
          })
        });
      }
    };

    function handleServerResponse(response, payment) {
      if (response.error) {
          showError(response.error);
          completePaymentRequest(payment, 'fail');
      } else if (response.requires_action) {
        stripe.handleCardAction(
          response.stripe_payment_intent_client_secret
        ).then(function(result) {
          if (result.error) {
            showError(result.error.message);
          } else {
            fetch('/stripe/confirm_payment', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                spree_payment_method_id: paymentMethodId,
                stripe_payment_intent_id: result.paymentIntent.id,
                authenticity_token: authToken
              })
            }).then(function(confirmResult) {
              return confirmResult.json();
            }).then(handleServerResponse);
          }
        });
      } else {
        completePaymentRequest(payment, 'success');
        form.unbind('submit').submit();
      }
    }

    function completePaymentRequest(payment, state) {
      if (payment && typeof payment.complete === 'function') {
          payment.complete(state);
      }
    }

    function mapCC(ccType) {
      if (ccType === 'MasterCard') {
        return 'mastercard';
      } else if (ccType === 'Visa') {
        return 'visa';
      } else if (ccType === 'American Express') {
        return 'amex';
      } else if (ccType === 'Discover') {
        return 'discover';
      } else if (ccType === 'Diners Club') {
        return 'dinersclub';
      } else if (ccType === 'JCB') {
        return 'jcb';
      } else {
        return ccType;
      }
    };

    function stripeTokenHandler(token) {
      var baseSelector = `<input type='hidden' class='stripeToken' name='payment_source[${paymentMethodId}]`;

      Spree.stripePaymentMethod.element.append(`${baseSelector}[gateway_payment_profile_id]' value='${token.id}'/>`);
      Spree.stripePaymentMethod.element.append(`${baseSelector}[last_digits]' value='${token.card.last4}'/>`);
      Spree.stripePaymentMethod.element.append(`${baseSelector}[month]' value='${token.card.exp_month}'/>`);
      Spree.stripePaymentMethod.element.append(`${baseSelector}[year]' value='${token.card.exp_year}'/>`);
      cardType.val(mapCC(token.card.brand));
    };

    function showError(error) {
      errorElement.text(error).show();
      setTimeout(function() {
        $.rails.enableElement(submitButton[0]);
        submitButton.removeAttr('disabled').removeClass('disabled');
      }, 100);
    };
  });
</script>
